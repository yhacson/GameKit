//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace GameKit.System {

public class Platform : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Platform(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Platform obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Platform() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          GameKitPINVOKE.delete_Platform(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public static uint GetType() {
    uint ret = GameKitPINVOKE.Platform_GetType();
    return ret;
  }

  public static string GetString() {
    string ret = GameKitPINVOKE.Platform_GetString();
    return ret;
  }

  public static uint Unknow {
    get {
      uint ret = GameKitPINVOKE.Platform_Unknow_get();
      return ret;
    } 
  }

  public static uint Windows {
    get {
      uint ret = GameKitPINVOKE.Platform_Windows_get();
      return ret;
    } 
  }

  public static uint Android {
    get {
      uint ret = GameKitPINVOKE.Platform_Android_get();
      return ret;
    } 
  }

  public static uint IOS {
    get {
      uint ret = GameKitPINVOKE.Platform_IOS_get();
      return ret;
    } 
  }

  public Platform() : this(GameKitPINVOKE.new_Platform(), true) {
  }

}

}
